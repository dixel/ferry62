swagger: "2.0"

info:
  title: "{{ project }} API"
  version: "1.0"

basePath: /api

paths:
{{#db}}
  /sample:
    get:
      summary: sample-fields
      description: |
        Returns the results of a sample SQL query runned against the database
      tags:
        - sample
      operationId: {{ name }}.handlers/sample-fields
      produces:
        - application/json
      parameters:
        - name: "name"
          in: "query"
          description: "name to be processed"
          required: true
          type: "string"
        - name: "age"
          in: "query"
          description: "age"
          required: true
          type: integer
        - name: "date"
          in: query
          description: "date"
          required: true
          type: date-time
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              name:
                type: string
                example: "Muster"
              age:
                type: integer
                example: 25
              date:
                type: date-time
                example: "2018-01-01T11:11:11"
        default:
          description: error
{{/db}}
{{#cached-db}}
  /cache/reset:
    get:
      summary: reset cache
      description: |
        reset the cache (for example if the new batch is finished)
      tags:
        - cache
      operationId: {{ name }}.handlers/reset-cache
      produces:
        - application/json
      responses:
        200:
          description: success
          schema:
            type: string
        default:
          description: error
{{/cached-db}}
  /ping:
    get:
      summary: check if the API endpoint is live
      description: |
          get pong as a response
      tags:
        - ping
      operationId: {{ name }}.handlers/pong
      produces:
        - application/json
      responses:
        200:
          description: success
          schema:
            type: string
        default:
          description: error
